---
#Notes: add vscode via snap
- hosts: t14
  become: yes
  vars:
    packages:
      - xrdp
      - tigervnc-server
      - virt-viewer
      # - nodejs
      - htop
      - dnf-automatic
      - vim
      - ansible
      - cockpit
      - cockpit-pcp
      - cockpit-machines
      - python3
      - code
      - google-chrome-stable
      - dnf-plugins-core
      # - packer

    services:
      # - xrdp
      - cockpit
      - pmlogger

  tasks:
    - name: Update everything because I have a problem
      yum:
        name: "*"
        state: latest

    # - name: Install EPEL when hatchet is RHEL (codeready builder repo)
    #   rhsm_repository:
    #     name: codeready-builder-for-rhel-8-x86_64-rpms
    #   when: ansible_distribution == "RedHat"

    # - name: Install EPEL when hatchet is RHEL (epel rpm )
    #   yum:
    #     name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
    #     state: latest
    #   when: ansible_distribution == "RedHat"

    - name: Add the vscode repo
      yum_repository:
        name: vscode-repo
        description: vscode-repo
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        enabled: yes
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        gpgcheck: yes

    - name: Add the chrome repo
      yum_repository:
        name: chrome-repo
        description: chrome-repo
        baseurl: https://dl.google.com/linux/chrome/rpm/stable/x86_64
        enabled: yes
        gpgkey: https://dl.google.com/linux/linux_signing_key.pub
        gpgcheck: yes

    # - name: Add the hashicorp repo
    #   yum_repository:
    #     name: hashicorp-repo
    #     description: hashicorp-repo
    #     baseurl: https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable
    #     enabled: yes
    #     gpgkey: https://rpm.releases.hashicorp.com/gpg
    #     gpgcheck: yes

    - name: Install "{{ packages }}"
      package:
        name: "{{ packages }}"
        state: present

    - name: Enable and start "{{ services }}"
      service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop: "{{ services }}"

    # - name: Enable xrdp in the firewall
    #   firewalld:
    #     port: 3389/tcp
    #     permanent: yes
    #     state: enabled
